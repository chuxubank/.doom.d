* Misaka's doom-emacs config
** Basic Usage
#+begin_src sh
  cd ~
  git clone --depth 1 https://github.com/hlissner/doom-emacs .emacs.d
  git clone https://github.com/chuxubank/.doom.d.git
  ~/.emacs.d/bin/doom install
#+end_src

You can then add =~/.emacs.d/bin/doom= to your ~PATH~ environment.

** macOS
*** File sync
#+begin_src sh
  cd ~
  ln -s ~/Library/Mobile\ Documents/iCloud~com~appsonthemove~beorg/Documents/org org
  ln -s ~/Library/Mobile\ Documents/3L68KQB4HG\~com\~readdle\~CommonDocuments/Documents PDFs
#+end_src

*** Install tools
#+begin_src sh
  brew install fd ripgrep sqlite
#+end_src

*** Rime
#+begin_src sh
  cd ~/Downloads
  librime_version=1.7.3
  wget -N https://github.com/rime/librime/releases/download/${librime_version}/rime-${librime_version}-osx.zip
  unzip -o rime-${librime_version}-osx.zip -d ~/librime
  rm -rf rime-${librime_version}-osx.zip
#+end_src

#+RESULTS:
| Archive:    | rime-1.7.3-osx.zip                                                       |
| inflating:  | /Users/misaka/librime/dist/bin/rime_dict_manager                         |
| inflating:  | /Users/misaka/librime/dist/bin/rime_deployer                             |
| inflating:  | /Users/misaka/librime/dist/bin/rime_patch                                |
| inflating:  | /Users/misaka/librime/dist/include/rime_levers_api.h                     |
| inflating:  | /Users/misaka/librime/dist/include/rime_api.h                            |
| inflating:  | /Users/misaka/librime/dist/lib/librime.dylib                             |
| inflating:  | /Users/misaka/librime/dist/lib/librime.1.dylib                           |
| inflating:  | /Users/misaka/librime/dist/lib/librime.1.7.3.dylib                       |
| inflating:  | /Users/misaka/librime/dist/share/cmake/rime/RimeConfig.cmake             |
| inflating:  | /Users/misaka/librime/thirdparty/bin/capnpc-capnp                        |
| inflating:  | /Users/misaka/librime/thirdparty/bin/capnp                               |
| inflating:  | /Users/misaka/librime/thirdparty/bin/opencc_phrase_extract               |
| inflating:  | /Users/misaka/librime/thirdparty/bin/opencc_dict                         |
| inflating:  | /Users/misaka/librime/thirdparty/bin/opencc                              |
| inflating:  | /Users/misaka/librime/thirdparty/bin/capnpc-c++                          |
| inflating:  | /Users/misaka/librime/thirdparty/bin/capnpc                              |
| extracting: | /Users/misaka/librime/thirdparty/share/.placeholder                      |
| inflating:  | /Users/misaka/librime/thirdparty/share/opencc/TWVariants.ocd2            |
| inflating:  | /Users/misaka/librime/thirdparty/share/opencc/t2jp.json                  |
| inflating:  | /Users/misaka/librime/thirdparty/share/opencc/TWPhrases.ocd2             |
| inflating:  | /Users/misaka/librime/thirdparty/share/opencc/t2tw.json                  |
| inflating:  | /Users/misaka/librime/thirdparty/share/opencc/TSCharacters.ocd2          |
| inflating:  | /Users/misaka/librime/thirdparty/share/opencc/STCharacters.ocd2          |
| inflating:  | /Users/misaka/librime/thirdparty/share/opencc/hk2t.json                  |
| inflating:  | /Users/misaka/librime/thirdparty/share/opencc/JPShinjitaiCharacters.ocd2 |
| inflating:  | /Users/misaka/librime/thirdparty/share/opencc/tw2s.json                  |
| inflating:  | /Users/misaka/librime/thirdparty/share/opencc/HKVariantsRevPhrases.ocd2  |
| inflating:  | /Users/misaka/librime/thirdparty/share/opencc/hk2s.json                  |
| inflating:  | /Users/misaka/librime/thirdparty/share/opencc/s2hk.json                  |
| inflating:  | /Users/misaka/librime/thirdparty/share/opencc/tw2t.json                  |
| inflating:  | /Users/misaka/librime/thirdparty/share/opencc/HKVariantsRev.ocd2         |
| inflating:  | /Users/misaka/librime/thirdparty/share/opencc/TWVariantsRevPhrases.ocd2  |
| inflating:  | /Users/misaka/librime/thirdparty/share/opencc/t2s.json                   |
| inflating:  | /Users/misaka/librime/thirdparty/share/opencc/STPhrases.ocd2             |
| inflating:  | /Users/misaka/librime/thirdparty/share/opencc/HKVariants.ocd2            |
| inflating:  | /Users/misaka/librime/thirdparty/share/opencc/TSPhrases.ocd2             |
| inflating:  | /Users/misaka/librime/thirdparty/share/opencc/JPVariants.ocd2            |
| inflating:  | /Users/misaka/librime/thirdparty/share/opencc/s2tw.json                  |
| inflating:  | /Users/misaka/librime/thirdparty/share/opencc/s2twp.json                 |
| inflating:  | /Users/misaka/librime/thirdparty/share/opencc/JPShinjitaiPhrases.ocd2    |
| inflating:  | /Users/misaka/librime/thirdparty/share/opencc/JPVariantsRev.ocd2         |
| inflating:  | /Users/misaka/librime/thirdparty/share/opencc/TWPhrasesRev.ocd2          |
| inflating:  | /Users/misaka/librime/thirdparty/share/opencc/t2hk.json                  |
| inflating:  | /Users/misaka/librime/thirdparty/share/opencc/TWVariantsRev.ocd2         |
| inflating:  | /Users/misaka/librime/thirdparty/share/opencc/s2t.json                   |
| inflating:  | /Users/misaka/librime/thirdparty/share/opencc/jp2t.json                  |
| inflating:  | /Users/misaka/librime/thirdparty/share/opencc/tw2sp.json                 |

** iOS/iPadOS
*** [[https://ish.app][ish]]
#+name: /etc/apk/repositories
#+begin_src
  https://mirror.tuna.tsinghua.edu.cn/alpine/edge/main
  https://mirror.tuna.tsinghua.edu.cn/alpine/edge/community
#+end_src

*** Install tools
#+begin_src sh
  apk install fd ripgrep sqlite
#+end_src

** Windows
*** Native
**** PowerShell Config
#+begin_src sh
Set-PSReadLineOption -EditMode Emacs
#+end_src
*** MSYS2
Install [[https://www.msys2.org/][MSYS2]].
- set ~MSYS2_PATH_TYPE=inherit~ in Windows environment.
- set ~MSYS2_ARG_CONV_EXCL=--path-separator~ in Windows environment. (fix the ~fd~ and ~rg~ path issue in msys2)

I use mingw64 terminal as my default one, which has all path in environment and no more config needed (It defines the =HOME= and =SHELL= environment).

#+begin_src bash
  pacman -S pactoys base-devel # pactoys use shortcut to install mingw64 packages, base-devel is needed by pdf-tools and emacs-rime
  pacboy -S emacs:x toolchain:x librime:x librime-data:x aspell-en:x python-pylint:x clang:x clang-tools-extra:x libc++:x
#+end_src

**** Install tools
#+begin_src sh
  scoop install aria2 # speed up the download
  scoop bucket add extras
  scoop install sharpkeys # swipe Caps Lock and left Ctrl
  scoop install fd ripgrep editorconfig plantuml openjdk latex
  scoop bucket add nerd-fonts
  scoop install sarasagothic-ttc
#+end_src

**** GUI shortcut
You can add a shortcut to =C:\msys64\mingw64\bin\runemacs.exe= and rename the shortcut to Emacs, then changing the =Start in:= property to the path you want to start.

**** File sync
#+begin_src sh
  ln -s ~/iCloudDrive/iCloud\~com\~appsonthemove\~beorg/org org
  ln -s ~/iCloudDrive/3L68KQB4HG\~com\~readdle\~CommonDocuments/ PDFs
#+end_src

**** UTF-8
In the ~Control Panel\Clock and Region -> Region -> Administrative -> Change system locale... -> [x] Beta: Use Unicode UTF-8 for worldwide language support~.

*** ArchWSL
**** Install tools
#+begin_src sh
  scoop install archwsl vcxsrv chrome
#+end_src

**** WSL system setting
***** Display
#+begin_src sh
  sudo pacman -S noto-fonts-cjk noto-fonts-emoji noto-fonts-extra ttf-fira-code ttf-dejavu
#+end_src

Ref: https://wiki.archlinux.org/index.php/Locale

***** Install tools
#+begin_src sh
  sudo pacman -S git github-cli fd ripgrep sqlite xdg-utils mailcap base-devel texlive-core texlive-pictures texlive-langchinese texlive-latexextra librime poppler-data aspell aspell-en texlab graphviz
#+end_src

Ref: https://wiki.archlinux.org/index.php/default_applications
     https://github.com/4U6U57/wsl-open/blob/master/DESIGN.md

**** Detect
#+begin_src elisp
(string-match "-[Mm]icrosoft" operating-system-release)
;; WSL: WSL1 has "-Microsoft", WSL2 has "-microsoft-standard"
(string-match-p "Microsoft" (shell-command-to-string "uname -a"))
#+end_src

Ref: https://emacs.stackexchange.com/a/55295

**** Config (WSL1)
#+begin_src sh
# doom-emacs
export PATH="$HOME/.emacs.d/bin:$PATH"

# display
export DISPLAY=:0.0
export LIBGL_ALWAYS_INDIRECT=1
export BROWSER=chrome.exe

# audio
export PULSE_SERVER=tcp:localhost
#+end_src

Ref: https://docs.microsoft.com/en-us/windows/wsl/interop#wslenv-flags
